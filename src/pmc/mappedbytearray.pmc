/*
Copyright (C) 2010, Parrot Foundation.

=head1 NAME

src/pmc/mappedbytearray.pmc - Mapped byte array

=head1 DESCRIPTION

A memory mapped file or shared memory segment accesible as array of bytes.

=cut

*/

#include "parrot/parrot.h"

#ifdef PARROT_HAS_HEADER_SYSMMAN
#    include <sys/mman.h>
#    define ENABLED
#endif

/* HEADERIZER HFILE: none */
/* HEADERIZER BEGIN: static */
/* Don't modify between HEADERIZER BEGIN / HEADERIZER END.  Your changes will be lost. */

PARROT_DOES_NOT_RETURN
static void unavailable(PARROT_INTERP, ARGIN(const char *msg))
        __attribute__nonnull__(1)
        __attribute__nonnull__(2);

#define ASSERT_ARGS_unavailable __attribute__unused__ int _ASSERT_ARGS_CHECK = (\
       PARROT_ASSERT_ARG(interp) \
    , PARROT_ASSERT_ARG(msg))
/* Don't modify between HEADERIZER BEGIN / HEADERIZER END.  Your changes will be lost. */
/* HEADERIZER END: static */


pmclass MappedByteArray auto_attrs {
    ATTR unsigned char *buffer;

/*

=head2 Vtable Functions

=over 4

=item C<init>

=item C<init_pmc>

=cut

*/

    VTABLE void init() {
        #ifdef ENABLED
        Parrot_ex_throw_from_c_args(INTERP, NULL, EXCEPTION_INVALID_OPERATION,
            "testing");
        #else
	unavailable(INTERP, "MappedByteArray");
	#endif
    }

    VTABLE void init_pmc(PMC * init) {
        #ifdef ENABLED
        Parrot_ex_throw_from_c_args(INTERP, NULL, EXCEPTION_INVALID_OPERATION,
            "testing");
        #else
	unavailable(INTERP, "MappedByteArray");
	#endif
    }

/*

=back

=cut

*/

} /* pmclass end */

/*

=head2 Helper functions

=over 4

=item unavailable()

Throws appropiately for functionality not available in the current platform.

=cut

*/

PARROT_DOES_NOT_RETURN
static void
unavailable(PARROT_INTERP, ARGIN(const char *msg))
{
    Parrot_ex_throw_from_c_args(interp, NULL, EXCEPTION_UNIMPLEMENTED,
            "%s not implemented in this platform", msg);
}

/*

=back

=cut

*/

/*
 * Local variables:
 *   c-file-style: "parrot"
 * End:
 * vim: expandtab shiftwidth=4:
 */
